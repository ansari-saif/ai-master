```dir/app.py
from flask import Flask, request, jsonify

app = Flask(__name__)

todos = []

@app.route('/todos', methods=['GET'])
def get_todos():
    return jsonify(todos)

@app.route('/todos', methods=['POST'])
def add_todo():
    todo = request.json.get('todo')
    if todo:
        todos.append(todo)
        return jsonify({'message': 'Todo added successfully!'}), 201
    return jsonify({'error': 'Invalid input'}), 400

@app.route('/todos/<int:todo_id>', methods=['DELETE'])
def delete_todo(todo_id):
    if 0 <= todo_id < len(todos):
        todos.pop(todo_id)
        return jsonify({'message': 'Todo deleted successfully!'})
    return jsonify({'error': 'Todo not found'}), 404

if __name__ == '__main__':
    app.run(debug=True)
```

```dir/requirements.txt
Flask==2.3.2
```

```dir/.gitignore
__pycache__/
*.pyc
instance/
.env
```

```dir/README.md
# Simple Todo App

This is a simple Todo application built with Flask.

## Setup

1. Install dependencies:
   ```
   pip install -r requirements.txt
   ```

2. Run the application:
   ```
   python app.py
   ```

3. Access the app at `http://127.0.0.1:5000/`.

## API Endpoints

- `GET /todos`: Retrieve all todos.
- `POST /todos`: Add a new todo. Send JSON with a `todo` key.
- `DELETE /todos/<todo_id>`: Delete a todo by its ID.
```

```dir/.env
FLASK_ENV=development
```